=======================
  This Week in PyPy 6
=======================

Introduction
============

This is the sixth of what will hopefully be many summaries of what's
been going on in the world of PyPy in the last week.  I'd still like
to remind people that when something worth summarizing happens to
recommend if for "This Week in PyPy" as mentioned on:

    http://codespeak.net/pypy/dist/pypy/doc/weekly/

where you can also find old summaries.  This week features the first
IRC summary from Pieter Holtzhausen, a feature that will hopefully
continue.

There were about 150 commits to the pypy section of codespeak's
repository in the last week (a relatively small number for a sprint
week -- lots of thinking going on here).


The Sprint!
===========

This is covered in more detail in the `sprint report`_, but seems to be
going well.  There has been work on the JIT, supporting larger integers and
sockets in RPython, making the stackless option more useful, performance,
compiler flexibility, documentation and probably even more.

.. _`sprint report`: http://codespeak.net/pipermail/pypy-dev/2005q4/002656.html


IRC Summary
===========

Thanks again to Pieter for this.  We need to talk about formatting :)

**Friday** http://tismerysoft.de/pypy/irc-logs/pypy/%23pypy.log.20051202::

  [00:04] Arigo states it is time to merge the PBC branch. Merging henceforth
          commences.
  [15:46] Pedronis and mwh discusses the simplification of the backend 
          selection of the translator. Some translator planning documents 
          checked in later.

**Saturday** http://tismerysoft.de/pypy/irc-logs/pypy/%23pypy.log.20051203::

  [15:45] Stakkars mentions the idea he posted to pypy-dev, that involves
          the substitution of CPython modules piecewise with pypy generated
          modules. Pedronis replies that he has thought of a similar
          approach to integrate pypy and Jython, but that this effort needs
          to be balanced with the fact that the pypy JIT currently needs
          attention.

**Sunday** http://tismerysoft.de/pypy/irc-logs/pypy/%23pypy.log.20051204::

  [14:03] Stakkars asks about the necessity of 3 stacks in the l3interpreter
          that Armin has been working on. One for floats, ints and
          addresses. After remarks about easier CPU support, Arigo replies
          that there is simply no sane way to write RPython with a single one.
  [18:26] Gromit asks how ready pypy is for production usage. He is
          interested in pypy as a smalltalk-like environment, since he deems
          objects spaces to be reminiscent of smalltalk vm images.
  [18:31] Stakkars states that he believes the project should postpone
          advanced technologies, in favour of getting the groundwork to a
          level where the project really becomes a CPython alternative.

**Monday** http://tismerysoft.de/pypy/irc-logs/pypy/%23pypy.log.20051205::

  [01:44] Pedronis running counting microbenchmarks, one 4.7 times slower
          than CPython, the other one 11.3 times. Function calling takes
          its toll in the latter.

**Tuesday, Wednesday**::

  [xx:xx] Sprint background radiation. Braintone rings like a bell. Not
          much to report.

**Thursday** http://tismerysoft.de/pypy/irc-logs/pypy/%23pypy.log.20051208::

  [17:55] Stakkars guess that RPython may get basic coroutine support, and
          is excited about that.
  [18:05] Stakkars votes for having stackless enabled all the time. The
          advantages:
             - real garbage collection
             - iterator implementation without clumsy state machines
  [20:19] Rhamphoryncus wonders whether dynamic specialization (e.g. psyco)
          can possibly improve memory layout.
  [20:46] Sabi is glad that long long is now supported (courtesy of mwh and
          Johahn). He yanks out his work around.


EU-related Talks
================

On Monday Holger spoke at a German EU office workshop in Bonn and two days
later he, Alastair and Bea spoke at a more union-wide EU workshop in
Brussels.  Both talks were very well received and while ostensibly we were
telling the EU about our project, we gained much immediately useful
information about how the EU actually adminsters projects such as ours.
