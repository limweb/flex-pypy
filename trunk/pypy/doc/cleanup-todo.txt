
PyPy cleanup areas
==================

This is a todo list that lists various areas of PyPy that should be cleaned up
(for whatever reason: less mess, less code duplication, etc).

translation toolchain
---------------------

 - low level backends should share more code
 - all backends should have more consistent interfaces
 - geninterp is a hack
 - keepalives need to die, finally
 - change weakrefs to work together with the GC
 - delegate finding type stuff like vtables etc to GC
 - clean up the tangle of how the various mallocs are implemented
   and responsability distributed acrosss headers, policies, backends,
   and the gctransfomers, which varies depending on the GC :(,
   exploit better the removal of zeroing assumption 
 - clean up the tangle of including headers in the C backend
 - make approach for loading modules more sane, mixedmodule capture
   too many platform dependecies especially for pypy-cli
 - review pdbplus, especially the graph commands, also in the light of
   https://codespeak.net/issue/pypy-dev/issue303 and the fact that
   we can have more than one translator/annotator around (with the
   timeshifter)
 - unicode strings in RPython
 - finish rctypes rewrite (some of items of this list depend on it)

interpreter
-----------

 - review the things implemented at applevel whether they are performance-
   critical

 - review threading (especially GIL). It's segfaulting quite often now.
