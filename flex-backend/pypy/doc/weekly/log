2005-11-25  mwh

  I wrote the fourth "This Week in PyPy".  This 'log' file isn't really
  working, is it?

2006-05-06  arigo

  Trying to revive this file, here are a few things of interest I worked
  on recently:

  * rctypes.  This is kind of complete.  We can now translate RPython
    programs using ctypes to C code that contains the corresponding
    native calls, with reasonably good performance.

  * the CPyObjSpace aims at allowing PyPy's modules to be compiled to
    regular CPython C extension modules.  There are a few key features
    missing but it is otherwise usable for mixed modules that don't
    really use their app-level half.  The entry point tool is
    ``compilemodule.py``, currently in pypy.rpython.rctypes.tool.

  * translation support for tagged pointers: any instance of a class
    inheriting from the mixin pypy.rpython.objectmodel.UnboxedValue
    will be represented as a pointer whose bit pattern is an odd
    integer.  The restriction is that the class must only have one
    read-only integer attribute.  There is an experimental
    pypy.objspace.std.smallintobject that uses this feature to
    implement "small enough" app-level integers.  (The app-level
    cannot see the difference between "small enough" and reguar int
    objects.)
